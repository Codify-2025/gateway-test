# 워크플로우 이름
name: Spring Boot CI - Build and Push Docker Image

# 1. 실행 조건: main 브랜치에 push가 발생했을 때만 실행
on:
  push:
    branches: [ "main" ]

# 워크플로우 전체에서 사용할 환경 변수
env:
  # Docker Hub 사용자 이름과 이미지 이름을 조합
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/gateway

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Docker 이미지 푸시를 위해 필요

    steps:
      - name: 1. 소스 코드 체크아웃
        uses: actions/checkout@v4

      - name: 2. JDK 17 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 3. Gradle 실행 권한 부여 및 빌드
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: 4. Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 5. 도커 이미지 빌드 및 푸시
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          echo "Building and pushing image: ${{ env.IMAGE_NAME }}:$IMAGE_TAG"
          # -f 옵션으로 Dockerfile의 정확한 경로를 지정하고,
          # 빌드 컨텍스트(소스 코드) 경로도 함께 지정합니다.
          docker build -f ./Dockerfile -t ${{ env.IMAGE_NAME }}:$IMAGE_TAG ./gateway-test
          docker push ${{ env.IMAGE_NAME }}:$IMAGE_TAG
